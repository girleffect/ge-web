# include conf.d/django.conf.d/upstream.conf;
# include conf.d/django.conf.d/maps/*.conf;

upstream gunicorn {
    # Proxy to Gunicorn socket and always retry, as recommended by deployment
    # guide: http://docs.gunicorn.org/en/stable/deploy.html
    server unix:/run/gunicorn/gunicorn.sock max_fails=0;
}

server {
    listen 8000;

    root /app;

    location ~ ^/media/?(.*)$ {
        # Fallback for projects still using MEDIA_ROOT = BASE_DIR/mediafiles
        try_files /media/$1 /mediafiles/$1 =404;
    }

    location ~ ^/static/?(.*)$ {
        # Fallback for projects still using STATIC_ROOT = BASE_DIR/staticfiles
        # as recommended by WhiteNoise
        try_files /static/$1 /staticfiles/$1 =404;
    }

    location / {
        client_max_body_size 20m;

        proxy_pass_header Server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Scheme $scheme;
        proxy_redirect off;

        # We only use the 'X-Forwarded-Proto' header from our load-balancer to
        # indicate the original connection used HTTPS, but Gunicorn by default
        # accepts more headers than that:
        # http://docs.gunicorn.org/en/19.7.1/settings.html#secure-scheme-headers
        # Overriding that config in Gunicorn is a bit complicated, and could
        # easily be overriden by accident by the user, so just delete those
        # other headers here so that a client can't set them
        # incorrectly/maliciously.
        proxy_set_header X-Forwarded-Protocol "";
        proxy_set_header X-Forwarded-Ssl "";
        proxy_pass http://gunicorn;
    }

    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Strict-Transport-Security "max-age=31536000" always;
    # Inside your server block or location block
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' https: 'unsafe-inline' 'unsafe-eval'; style-src 'self' https: 'unsafe-inline';" always;
    #add_header Content-Security-Policy "default-src https: 'self';" always;
    add_header Referrer-Policy "same-origin" always;
}

# redirect all requests with the prefix www. to the site without www
server {
    listen 8000;
    server_name ~^www\.(?<domain>.+)$;
    return 301 https://$domain$request_uri;
}

# redirect old english sites
server {
    listen 8000;
    server_name gh.heyspringster.com ls.heyspringster.com us.heyspringster.com;
    return 301 https://en.heyspringster.com$request_uri;
}

# redirect old french sites
server {
    listen 8000;
    server_name bj.heyspringster.com cd.heyspringster.com cm.heyspringster.com bf.heyspringster.com;
    return 301 https://fr.heyspringster.com$request_uri;
}

# redirect old portugeuse sites
server {
    listen 8000;
    server_name mz.heyspringster.com;
    return 301 https://pt.heyspringster.com$request_uri;
}

# redirect old swahili sites
server {
    listen 8000;
    server_name ke.heyspringster.com ug.heyspringster.com;
    return 301 https://sw.heyspringster.com$request_uri;
}

# redirect old tanzania sites
server {
    listen 8000;
    server_name tz.heyspringster.com www.tz.heyspringster.com;
    return 301 https://tujibebe.com$request_uri;
}

# redirect other yegna urls
server {
    listen 8000;
    server_name yegna.tv yegna.org www.yegna.tv www.yegna.org;
    return 301 https://yegna.com$request_uri;
}

# redirect old za.heyspringster.com
server {
    listen 8000;
    server_name za.heyspringster.com;
    return 302 https://bigsis.co.za$request_uri;
}

# redirect other zathu urls
server {
    listen 8000;
    server_name zathu.org zathu.com www.zathu.org www.zathu.com;
    return 301 https://zathu.mw$request_uri;
}
